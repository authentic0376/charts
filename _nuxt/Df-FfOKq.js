import{S as p,k as g,m as w,T as z,L as $,J as u}from"./iGFIcCMA.js";function C(s,c,v,a,r,l="P5Renderer"){const e=p(null),o=g(!1),d=async()=>{if(typeof window<"u"&&s.value&&!e.value)try{console.log(`Attempting to initialize ${l}...`);const i=await r();if(!i)throw new Error(`Failed to dynamically import ${l} class.`);const n=new i;await n.setup(s.value,c.value,v.value),e.value=n,o.value=!0,console.log(`${l} Initialized successfully via Composable.`)}catch(i){console.error(`Failed to setup ${l} via Composable:`,i),e.value=null,o.value=!1}else e.value?console.log(`${l} already initialized.`):typeof window>"u"?console.log(`${l} initialization skipped on server-side rendering.`):console.warn(`${l} initialization prerequisites not met (container missing?).`)},f=()=>{e.value&&(console.log(`Cleaning up ${l}...`),e.value.destroy(),e.value=null,o.value=!1,console.log(`${l} Cleaned up via Composable.`))};return w(()=>{z(d)}),$(f),u(a,i=>{e.value&&o.value&&e.value.draw(i)},{deep:!0}),u(o,i=>{i&&e.value&&(console.log(`${l} is ready, triggering initial draw.`),e.value.draw(a.value))},{immediate:!1}),{isInitialized:o,resizeRenderer:(i,n)=>{var t;(t=e.value)!=null&&t.resize&&o.value?(console.log(`Resizing ${l} to ${i}x${n}`),e.value.resize(i,n)):o.value&&console.warn(`${l} does not support resize method or is not initialized.`)}}}export{C as u};
