import{T as d,k as f,m as z,S as w,L as $,J as g}from"./COBHd9is.js";function C(n,t,u,c,r,l="P5Renderer"){const e=d(null),i=f(!1),v=async()=>{if(typeof window<"u"&&n.value&&!e.value)try{console.log(`Attempting to initialize ${l}...`);const o=await r();if(!o)throw new Error(`Failed to dynamically import ${l} class.`);const s=new o;await s.setup(n.value,t.value,u.value),e.value=s,i.value=!0,console.log(`${l} Initialized successfully via Composable.`)}catch(o){console.error(`Failed to setup ${l} via Composable:`,o),e.value=null,i.value=!1}else e.value?console.log(`${l} already initialized.`):typeof window>"u"?console.log(`${l} initialization skipped on server-side rendering.`):console.warn(`${l} initialization prerequisites not met (container missing?).`)},p=()=>{e.value&&(console.log(`Cleaning up ${l}...`),e.value.destroy(),e.value=null,i.value=!1,console.log(`${l} Cleaned up via Composable.`))};return z(()=>{w(v)}),$(p),g(c,o=>{e.value&&i.value&&e.value.draw(o)},{deep:!0,flush:"post"}),{isInitialized:i,resizeRenderer:(o,s)=>{var a;(a=e.value)!=null&&a.resize&&i.value?(console.log(`Resizing ${l} to ${o}x${s}`),e.value.resize(o,s)):i.value&&console.warn(`${l} does not support resize method or is not initialized.`)},renderer:e}}export{C as u};
